spring.application.name=${NOME_DA_APLICACAO:servico de proposta}

# Banco de Dados
spring.datasource.platform=postgres
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/proposta}
spring.datasource.username=keycloak
spring.datasource.password=password
spring.database.driverClassName=org.postgresql.Driver

# jpa
spring.jpa.database-palataform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update

# Actuator
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoint.health.show-details=always
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.endpoints.prometheus.enabled=true
anagement.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


# URLs Servi√ßos
analise_solicitacao_url=${ANALISE_SOLICITACAO_URL:http://localhost:9999/api/solicitacao}
cartao_url=${CARTAO_URL:http://localhost:8888/api/cartoes}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/api-bancaria}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/api-bancaria/protocol/openid-connect/certs}

# jaeger
opentracing.jaeger.http-sender.url = ${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
opentracing.jaeger.service-name=${spring.application.name}

# hash salt
security.salt=${SALT:$2a$10$wpLIZ73iE90b.EOFUsf2eu}